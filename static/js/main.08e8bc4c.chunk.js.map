{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifcations.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifcations","style","idsplay","Button","color","onClick","root","display","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","console","log","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08e8bc4c.chunk.js","sourcesContent":["import React, {createContext, useState, useRef, useEffect} from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('')\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true})\r\n        .then((currentStream) => {\r\n            setStream(currentStream);\r\n\r\n            myVideo.current.srcObject = currentStream;\r\n\r\n        });\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivedCall: true, from, name: callerName, signal})\r\n\r\n\r\n        });\r\n\r\n    }, []);     //need empty dependecy for this to work!\r\n    \r\n    const answerCall = () => {\r\n        setCallAccepted(true)\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', { signal: data, to: call.from});\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream\r\n\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n\r\n\r\n    }\r\n\r\n    const callUser = (id) => {\r\n\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', { userToCall: id, signalData: data, from: me, name});\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream\r\n\r\n        });\r\n\r\n        socket.on('callaccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n\r\n        })\r\n\r\n        connectionRef.current = peer;\r\n\r\n\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall \r\n        }}>\r\n            {children}\r\n\r\n        </SocketContext.Provider>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport { Grid, Typography, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      width: '550px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '300px',\r\n      },\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: '10px',\r\n      border: '2px solid black',\r\n      margin: '10px',\r\n    },\r\n  }));\r\n\r\nconst VideoPlayer = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.gridContainer}>\r\n            \r\n\r\n            {\r\n                stream && (\r\n            \r\n            <Paper className={classes.paper}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h5\" gutterBottom>{name || 'Name'}\r\n\r\n                    </Typography>\r\n                    <video playsInline muted ref={myVideo} autoPlay className={classes.video}/> \r\n\r\n\r\n                </Grid>\r\n\r\n            </Paper>\r\n            \r\n            )}\r\n\r\n\r\n            {/* users video */}\r\n\r\n            { callAccepted && !callEnded && (\r\n            <Paper className={classes.paper}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}\r\n\r\n                    </Typography>\r\n                    <video playsInline ref={userVideo} autoPlay className={classes.video}/>\r\n\r\n\r\n                </Grid>\r\n\r\n            </Paper>\r\n            )}\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer\r\n","import React, { useContext } from 'react'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst Notifcations = () => {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext)\r\n    return (\r\n        <>\r\n            {call.isReceivedCall && !callAccepted && (\r\n\r\n                <div style={{ idsplay: 'flex', justifyContent: 'center'}}>\r\n                    <h1>{call.name} is calling: </h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n\r\n                    </Button>\r\n                </div>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifcations\r\n","import React, { useContext,  useState } from 'react';\r\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\r\nimport  { makeStyles } from '@material-ui/core/styles';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n      width: '100%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    container: {\r\n      width: '600px',\r\n      margin: '35px 0',\r\n      padding: 0,\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '80%',\r\n      },\r\n    },\r\n    margin: {\r\n      marginTop: 20,\r\n    },\r\n    padding: {\r\n      padding: 20,\r\n    },\r\n    paper: {\r\n      padding: '10px 20px',\r\n      border: '2px solid black',\r\n    },\r\n   }));\r\n  \r\n\r\n\r\n\r\nconst Options = ( {children} ) => {\r\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser} = useContext(SocketContext);\r\n    const [idToCall, setIdToCall] = useState('');\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.container} >\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container className={classes.gridContainer}>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth/>\r\n                            {console.log(me)}\r\n                            <CopyToClipboard text={me} className={classes.margin}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n\r\n                                    Copy Your ID\r\n\r\n                                </Button>\r\n\r\n                            </CopyToClipboard>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n                            <TextField label=\"ID to Call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth/>\r\n                            {callAccepted && !callEnded ? (\r\n                                <Button \r\n                                variant=\"contained\" \r\n                                color=\"secondary\" \r\n                                startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                                fullWidth\r\n                                onClick={leaveCall}\r\n                                className={classes.margin}\r\n                                >\r\n                                    Hang up\r\n                                </Button>\r\n                            ) : (\r\n                                <Button\r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                startIcon={<Phone fontSize=\"large\" />}\r\n                                fullWidth\r\n                                onClick={() => callUser(idToCall)}\r\n                                className={classes.margin}>\r\n                                    Call\r\n                                </Button>\r\n\r\n                            )}\r\n                            \r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </form>\r\n\r\n            {children}</Paper>\r\n            \r\n            \r\n            \r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Options\r\n","import React from 'react'  //arrow function... type in rfce. creates it for you!\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifcations from './components/Notifcations';\r\nimport Options from './components/Options';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 100px',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '600px',\r\n        border: '2px solid black',\r\n    \r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '90%',\r\n        },\r\n      },\r\n      \r\n      wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n      },\r\n\r\n}));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();  //run it by typing in console cd ./client/\r\n                    //then npm start\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">Video Chat</Typography>\r\n\r\n            </AppBar>\r\n            <VideoPlayer />\r\n            <Options>\r\n                <Notifcations />\r\n\r\n            </Options>\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import React from 'react';           //always need this file index.js... \r\nimport  ReactDOM  from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>\r\n, document.getElementById('root')  //our app connects to this root div\r\n);  "],"sourceRoot":""}